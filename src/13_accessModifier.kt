/*
    변수, 함수, 클래스의 접근범위와 접근제한자
    
    스코프 scope
        변수, 함수, 클래스 같은 멤버들을 서로 공유하여 사용할 수 있는 범위를 지정해둔 단위
        패키지, 클래스, 함수 내부 등이 있음
        스코프 규칙
            1. 스코프 외부에서는 스코프 내부의 멤버를 참조연산자 로만 참조가 가능합니다.
            2. 동일 스코프 내에서는 멤버들을 공유 할 수 있습니다.
            3. 하위 스코프에서는 상위 스코프의 멤버를 재정의 할 수 있습니다.
            
    접근 제한자
        스코프 외부에서 스코프 내부에 접근할때 그 권한을 개발자가 제한 할 수 있는 기능
        변수, 함수, 클래스 언선시 맨 앞에 붙여 사용

        *패키지 스코프*
        public 어던 패키지에서도 접근 가능 (기본값)
        internal 같은 모듈 내에서만 접근 가능
        private 같은 파일 내에서만 접근가능

        *클래스 스코프*
        public 클래스 외부에서 늘 접근 가능 (기본값)
        private 클래스 내부에서만 접근 가능
        protected 클래스 자신과 상속받은 클래스에서 접근 가능
 */

var a = "패키지 스코프"

class B {
    var a = "클래스 스코프"
    fun print() {
        println(a)
    }
}

fun main() {
    val a = "함수 스코프"
    println(a)
    B().print()
}